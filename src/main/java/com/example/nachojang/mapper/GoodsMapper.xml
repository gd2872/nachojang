<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.nachojang.mapper.GoodsMapper">
	
	<!-- 우림) 카테고리별 총 상품 수 : customer/goodsList -->
	<select id="selectCategoryGoodsCount">
		SELECT COUNT(*) 
		FROM goods g
		JOIN goods_category gc ON g.goods_no = gc.goods_no
		<if test="categoryNo != null">
			WHERE gc.category_no = #{categoryNo}
		</if>
	</select>
	
	<!-- 우림) 상품리스트 : customer/goodsList -->
	<select id="selectCategoryGoodsList"
	        parameterType="Map">
	    SELECT 
	        g.goods_no goodsNo
	        , g.goods_title goodsTitle
	        , g.goods_memo goodsMemo
	        , g.goods_price goodsPrice
	        , g.goods_state goodsState
	        , gf.goods_file_name goodsFileName
	        , gf.goods_file_ext goodsFileExt
	        , c.category_title categoryTitle
	    FROM 
	        goods g
	    JOIN 
	        goods_category gc ON g.goods_no = gc.goods_no 
	    JOIN 
	        category c ON gc.category_no = c.category_no 
	    LEFT JOIN 
	        goods_file gf ON g.goods_no = gf.goods_no
	    <if test="categoryNo != null">
	    WHERE
	        c.category_no = #{categoryNo}
	    </if>
	    LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 우림) 신규상품 리스트 : customer/main -->
	<select id="selectNewGoodsList"
         resultType="map">
		SELECT 
		   g.goods_no goodsNo, 
		   g.goods_title goodsTitle,
		   g.goods_memo goodsMemo,
		   g.goods_price goodsPrice,
		   g.goods_state goodsState,
		   g.create_date createDate, 
		   gf.goods_file_name goodsFileName,
		   gf.goods_file_ext goodsFileExt
		FROM 
		   goods g
		LEFT JOIN 
		   goods_file gf ON g.goods_no = gf.goods_no
		GROUP BY 
		   g.goods_no, g.goods_title, g.goods_memo, g.goods_price, g.goods_state, g.create_date, gf.goods_file_name, gf.goods_file_ext
		ORDER BY 
		   createDate DESC
		Limit 4
	</select>
	
	<!-- 우림) 인기상품 리스트 : customer/main -->
	<select id="selectBestGoodsList"
			resultType="map">
		SELECT 
		   g.goods_no goodsNo, 
		   g.goods_title goodsTitle,
		   g.goods_memo goodsMemo,
		   g.goods_price goodsPrice,
		   g.goods_state goodsState,
		   gf.goods_file_name goodsFileName,
		   gf.goods_file_ext goodsFileExt,
		   SUM(o.orders_amount) AS total_orders
		FROM 
		   goods g
		JOIN 
		   orders o ON g.goods_no = o.goods_no
		LEFT JOIN 
		   goods_file gf ON g.goods_no = gf.goods_no
		GROUP BY 
		   g.goods_no, g.goods_title, g.goods_memo, g.goods_price, g.goods_state, gf.goods_file_name, gf.goods_file_ext
		ORDER BY 
		   total_orders DESC;
	</select>
	
	<!-- 상품 목록 조회 -->
	<select id="selectGoodsList" resultType="map">
		SELECT
		g.goods_no AS goodsNo,
		g.goods_title AS goodsTitle,
		g.goods_price AS goodsPrice,
		g.create_date AS createDate,
		c.category_no AS category,
		gf.goods_file_name AS goodsFileName,
		gf.goods_file_ext AS goodsFileExt
		FROM goods g
		LEFT JOIN goods_category gc ON g.goods_no = gc.goods_no
		LEFT JOIN category c ON gc.category_no = c.category_no
		LEFT JOIN goods_file gf ON g.goods_no = gf.goods_no
		ORDER BY g.goods_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<!-- 상품 전체 개수 -->
	<select id="selectGoodsCount" parameterType="string"
		resultType="int">
		SELECT COUNT(*)
		FROM goods
		WHERE goods_title LIKE CONCAT('%',
		#{search}, '%')
	</select>

	<!-- 우림_상품 추가 : staff/on/addGoods -->
	<insert id="insertGoods"
		parameterType="com.example.nachojang.vo.Goods">
		<selectKey resultType="int" keyProperty="goodsNo"
			order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		INSERT INTO goods (
			goods_title
			, goods_memo
			, goods_price
			, goods_state
		) VALUES (
			#{goodsTitle}, #{goodsMemo}, #{goodsPrice}, #{goodsState}
		)
	</insert>


</mapper>